sccdag nodes
i32 %0
i8** %1
%3 = alloca [5 x i32], align 16
%4 = bitcast [5 x i32]* %3 to i8*
call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 bitcast ([5 x i32]* @__const.main.arr to i8*), i64 20, i1 false)
%13 = load i32, i32* %12, align 4
br label %5
%.02 = phi i32 [ 7, %2 ], [ %15, %16 ] | %15 = add nsw i32 %.02, %14
br i1 %7, label %8, label %18 | %.01 = phi i32 [ 0, %2 ], [ %17, %16 ] | %6 = mul nsw i32 %0, 10000 |
  %7 = icmp slt i32 %.01, %6 | %17 = add nsw i32 %.01, 1
%.0 = phi i32 [ 4, %2 ], [ %9, %16 ] | %9 = add nsw i32 %.0, %.01
%10 = srem i32 %.01, 5
%11 = sext i32 %10 to i64
%12 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 %11
%14 = sub nsw i32 %9, %13
br label %16
br label %5
%.02.lcssa = phi i32 [ %.02, %5 ]
%.01.lcssa = phi i32 [ %.01, %5 ]
%.0.lcssa = phi i32 [ %.0, %5 ]
%19 = getelementptr [12 x i8], [12 x i8]* @.str, i64 0, i64 0
%20 = call i32 (i8*, ...) @printf(i8* %19, i32 %.01.lcssa, i32 %.0.lcssa, i32 %.02.lcssa)
ret i32 0

clonable SCC
%4 = bitcast [5 x i32]* %3 to i8*
br label %5
%12 = getelementptr inbounds [5 x i32], [5 x i32]* %3, i64 0, i64 %11
%11 = sext i32 %10 to i64
br label %16
br label %5
%.02.lcssa = phi i32 [ %.02, %5 ]
%.01.lcssa = phi i32 [ %.01, %5 ]
%.0.lcssa = phi i32 [ %.0, %5 ]
%19 = getelementptr [12 x i8], [12 x i8]* @.str, i64 0, i64 0
ret i32 0
%.01 = phi i32 [ 0, %2 ], [ %17, %16 ] ; %17 = add nsw i32 %.01, 1 ;
  %6 = mul nsw i32 %0, 10000 ; %7 = icmp slt i32 %.01, %6 ; br i1 %7, label %8, label %18
%10 = srem i32 %.01, 5
%14 = sub nsw i32 %9, %13
%3 = alloca [5 x i32], align 16
i32 %0

loop carried dependencies (top loop)
br i1 %7, label %8, label %18 ; %.02 = phi i32 [ 7, %2 ], [ %15, %16 ]
br i1 %7, label %8, label %18 ; %.01 = phi i32 [ 0, %2 ], [ %17, %16 ]
br i1 %7, label %8, label %18 ; %.0 = phi i32 [ 4, %2 ], [ %9, %16 ]
br i1 %7, label %8, label %18 ; %6 = mul nsw i32 %0, 10000
br i1 %7, label %8, label %18 ; %7 = icmp slt i32 %.01, %6
br i1 %7, label %8, label %18 ; br i1 %7, label %8, label %18
%17 = add nsw i32 %.01, 1 ;%.01 = phi i32 [ 0, %2 ], [ %17, %16 ]
%15 = add nsw i32 %.02, %14 ; %.02 = phi i32 [ 7, %2 ], [ %15, %16 ]
%9 = add nsw i32 %.0, %.01 ; %.0 = phi i32 [ 4, %2 ], [ %9, %16 ]

reducible SCC
%.02 = phi i32 [ 7, %2 ], [ %15, %16 ] | %15 = add nsw i32 %.02, %14
